(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{325:function(t,s,e){"use strict";e.r(s);var a=e(1),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"consoleappender"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#consoleappender"}},[t._v("#")]),t._v(" ConsoleAppender "),e("Badge",{attrs:{text:"Class",type:"class"}})],1),t._v(" "),e("section",{staticClass:"symbol-info"},[e("table",{staticClass:"is-full-width"},[e("tbody",[e("tr",[e("th",[t._v("Module")]),e("td",[e("div",{staticClass:"lang-typescript"},[e("span",{staticClass:"token keyword"},[t._v("import")]),t._v(" { ConsoleAppender } "),e("span",{staticClass:"token keyword"},[t._v("from")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('"@tsed/logger"')])])])]),e("tr",[e("th",[t._v("Source")]),e("td",[e("a",{attrs:{href:"https://github.com/TypedProject/logger/blob/v5.5.0/packages/logger/src/appenders/components/ConsoleAppender.ts#L0-L0"}},[t._v("/packages/logger/src/appenders/components/ConsoleAppender.ts")])])])])])]),t._v(" "),e("h2",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),e("div",{staticClass:"language-typescript"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",{pre:!0,attrs:{class:"typescript-lang "}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" ConsoleAppender "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("a",{pre:!0,attrs:{href:"/api/logger/appenders/class/BaseAppender.html"}},[e("span",{pre:!0,attrs:{class:"token"}},[t._v("BaseAppender")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loggingEvent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("a",{pre:!0,attrs:{href:"/api/logger/core/LogEvent.html"}},[e("span",{pre:!0,attrs:{class:"token"}},[t._v("LogEvent")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),t._v(" "),e("h2",{attrs:{id:"description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" Description")]),t._v(" "),e("div",{pre:!0},[e("h2",{pre:!0,attrs:{id:"console-appender"}},[e("a",{pre:!0,attrs:{class:"header-anchor",href:"#console-appender"}},[t._v("#")]),t._v(" Console Appender")]),t._v(" "),e("p",[t._v("This appender uses node’s console object to write log events. It can also be used in the browser, if you’re using browserify or something similar. Be aware that writing a high volume of output to the console can make your application use a lot of memory. If you experience this problem, try switching to the stdout appender.")]),t._v(" "),e("h2",{pre:!0,attrs:{id:"configuration"}},[e("a",{pre:!0,attrs:{class:"header-anchor",href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),e("ul",[e("li",[t._v("type - console")]),t._v(" "),e("li",[t._v("layout - object (optional, defaults to colouredLayout) - see layouts")])]),t._v(" "),e("p",[t._v("Note that all log events are output using console.log regardless of the event’s level (so ERROR events will not be logged using console.error)")]),t._v(" "),e("h2",{pre:!0,attrs:{id:"example"}},[e("a",{pre:!0,attrs:{class:"header-anchor",href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("div",{pre:!0,attrs:{class:"language-typescript line-numbers-mode"}},[e("pre",{pre:!0,attrs:{"v-pre":"",class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Logger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ts-log-debug"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" logger "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Logger")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"loggerName"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nlogger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("appenders"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"console"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"console"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    levels"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"debug"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trace"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{pre:!0,attrs:{class:"line-numbers-wrapper"}},[e("span",{pre:!0,attrs:{class:"line-number"}},[t._v("1")]),e("br"),e("span",{pre:!0,attrs:{class:"line-number"}},[t._v("2")]),e("br"),e("span",{pre:!0,attrs:{class:"line-number"}},[t._v("3")]),e("br"),e("span",{pre:!0,attrs:{class:"line-number"}},[t._v("4")]),e("br"),e("span",{pre:!0,attrs:{class:"line-number"}},[t._v("5")]),e("br"),e("span",{pre:!0,attrs:{class:"line-number"}},[t._v("6")]),e("br"),e("span",{pre:!0,attrs:{class:"line-number"}},[t._v("7")]),e("br"),e("span",{pre:!0,attrs:{class:"line-number"}},[t._v("8")]),e("br")])])]),t._v(" "),e("h2",{attrs:{id:"members"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#members"}},[t._v("#")]),t._v(" Members")]),t._v(" "),e("div",{pre:!0},[e("div",{pre:!0,attrs:{class:"method-overview"}},[e("div",{pre:!0,attrs:{class:"language-typescript"}},[e("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[e("code",{pre:!0,attrs:{class:"typescript-lang "}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loggingEvent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("a",{pre:!0,attrs:{href:"/api/logger/core/LogEvent.html"}},[e("span",{pre:!0,attrs:{class:"token"}},[t._v("LogEvent")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])])])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);